{
  "$schema": "./ui5parserConfig.schema.json",
  "templates": {
    "ambientClass": "templates/classAmbient.d.ts.hb",
    "modularClass": "templates/classModule.d.ts.hb",
    "ambientInterface": "templates/ambientInterface.d.ts.hb",
    "modularInterface": "templates/interfaceModule.d.ts.hb",
    "ambientEnum": "templates/ambientEnum.d.ts.hb",
    "modularEnum": "templates/enumModule.d.ts.hb",
    "ambientNamespace": "templates/ambientNamespace.d.ts.hb",
    "modularNamespace": "templates/namespaceModule.d.ts.hb",
    "module": "templates/module.d.ts.hb"
  },
  "connection": {
    "root": "https://openui5.hana.ondemand.com/test-resources",
    "endpoints": [
      "sap/m/designtime/api.json",
      "sap/ui/core/designtime/api.json",
      "sap/tnt/designtime/api.json",
      "sap/ui/commons/designtime/api.json",
      "sap/ui/demokit/designtime/api.json",
      "sap/ui/dt/designtime/api.json",
      "sap/ui/layout/designtime/api.json",
      "sap/ui/suite/designtime/api.json",
      "sap/ui/table/designtime/api.json",
      "sap/ui/unified/designtime/api.json",
      "sap/ui/ux3/designtime/api.json",
      "sap/uxap/designtime/api.json"
    ]
  },
  "outdir": "declarations",
  "typeMap": {
    "*": "any",
    "array": "any[]",
    "Array": "any[]",
    "array.&lt;array.&lt;string&gt;&gt;": "string[][]",
    "arraybuffer": "any",
    "bAlwaysShow": "boolean",
    "blob": "any",
    "Boolean": "boolean",
    "CalendarAppointment": "any",
    "Control": "sap.ui.core.Control",
    "createDefaultContent": "any",
    "date": "any",
    "Date": "any",
    "DomNode": "any",
    "DOMNode": "any",
    "domRef": "any",
    "DomRef": "any",
    "DOMRef": "any",
    "element": "any",
    "Element": "any",
    "EntityType": "any",
    "Error": "any",
    "event": "any",
    "float": "number",
    "function": {
      "replacement": "Function",
      "return": true
    },
    "function()": {
      "replacement": "Function",
      "return": true
    },
    "(() &#x3D;& gt; any)": {
      "replacement": "(a: any, b: any) => boolean",
      "return": true
    },
    "Generator": "any",
    "HTMLElement": "any",
    "int": "number",
    "integer": "number",
    "InvisibleControl": "sap.ui.core.Control",
    "jQuery": "any",
    "jQuery.promise": "any",
    "jQuery.Promise": "any",
    "jQuery.sap.log": "jQuery.sap.log.Logger",
    "map": "any",
    "Map": "any",
    "MenuButton": "any",
    "null": "any",
    "Number": "number",
    "objec": "any",
    "object": "any",
    "Object": "any",
    "ObjectNumber": "number",
    "oWindow": "any",
    "Promise": "any",
    "regexp": "string",
    "sap.m.Control": "sap.ui.core.Control",
    "sap.m.DynamicSideContent": "sap.ui.layout.DynamicSideContent",
    "sap.m.P13nConditionOperation": "any",
    "sap.m.TabStripItem": "any",
    "sap.ui.base.ManagedObjectMetadata": "any",
    "sap.ui.base.ManageObject": "sap.ui.base.ManagedObject",
    "sap.ui.Core.Control": "sap.ui.core.Control",
    "sap.ui.core.Controller": "sap.ui.core.mvc.Controller",
    "sap.ui.core.Integer": "sap.ui.model.type.Integer",
    "sap.ui.core.InvisibleControl": "any",
    "sap.ui.core.message.MessageModel": "sap.ui.model.message.MessageModel",
    "sap.ui.core.Model": "sap.ui.model.Model",
    "sap.ui.core.String": "sap.ui.model.type.String",
    "sap.ui.demokit.UI5EntityCueCardStyle": "any",
    "sap.ui.message.MessagePaser": "sap.ui.core.message.MessageParser",
    "sap.ui.message.MessageProcessor": "sap.ui.core.message.MessageProcessor",
    "sap.ui.model.odata.OdataListBinding": "sap.ui.model.odata.ODataListBinding",
    "sap.ui.model.odata.v4.lib._MetadataRequestor": "any",
    "sap.ui.suite.TaskCircleColor": "any",
    "sap.ui.test.qunit": "any",
    "ScrollEnablement": "sap.ui.core.delegate.ScrollEnablement",
    "sting": "string",
    "String": "string",
    "TablePersoController": "any",
    "TablePersoDialog": "any",
    "Touch": "any",
    "TouchList": "any",
    "true": "boolean",
    "undefined": "any",
    "Window": "any",
    "{type:string,index:int}": {
      "replacement": "{type:string,index:number}",
      "return": true
    },
    "Object.<string,function()>": {
      "replacement": "{[eventName: string]: Function}",
      "return": true
    },
    "UriParameters": "jQuery.sap.util.UriParameters",
    "[object Object]": "any",
    "[object Object][]": "any[]",
    "Array.<[object Object]>": "any[]",
    "Object.<string,string>": {
      "replacement": "{[key: string]: string}",
      "return": true
    },
    "IBar": "sap.m.IBar",
    "IBarHTMLTag": "sap.m.IBarHTMLTag",
    "sap.ui.commons.form.SimpleFormLayout": "sap.ui.layout.form.SimpleFormLayout",
    "sap.ui.commons.TitleLevel": "sap.ui.core.TitleLevel"
  },
  "substitutedTypes": {
    "sap.ui.core.CSSSize": "declare namespace sap.ui.core {\nexport type CSSSize = string;\n}",
    "sap.ui.core.ID": "declare namespace sap.ui.core {\nexport type ID = string;\n}",
    "sap.ui.core.URI": "declare namespace sap.ui.core {\nexport type URI = string;\n}",
    "sap.ui.model.ModelName": "declare namespace sap.ui.model {\nexport type Modelname = string;\n}",
    "sap.m.IconTabBarSelectList": "declare namespace sap.m {\nexport type IconTabBarSelectList = any;\n}",
    "sap.ui.core.CSSColor": "declare namespace sap.ui.core {\nexport type CSSColor = string;\n}",
    "sap.ui.core.Dock": "declare namespace sap.ui.core {\nexport type Dock = 'begin top' | 'begin center' | 'begin bottom' | 'left top' | 'left center' | 'left bottom' | 'right top' | 'right center' | 'right bottom' | 'center top' | 'center center' | 'center bottom' | 'end top' | 'end center' | 'end bottom'\n}",
    "sap.ui.core.Percentage": "declare namespace sap.ui.core {\nexport type Percentage = string;\n}",
    "sap.ui.commons.SplitterSize": "declare namespace sap.ui.commons {\nexport type SplitterSize = string;\n}",
    "sap.ui.layout.GridIndent": "declare namespace sap.ui.layout {\nexport type GridIndent = string;\n}",
    "sap.ui.layout.GridSpan": "declare namespace sap.ui.layout {\nexport type GridSpan = string;\n}",
    "sap.ui.core.Collision": "declare namespace sap.ui.core { export type Collision = 'flip flip' | 'fit flip' | 'none flip' | 'flip fit' | 'fit fit' | 'none fit' | 'flip none' | 'fit none' | 'none none'; }",
    "sap.ui.layout.form.GridElementCells": "declare namespace sap.ui.layout.form { export type GridElementCells = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'auto' | 'full'; }",
    "sap.ui.model.odata.v2.ODataAnnotations.Source": "declare namespace sap.ui.model.odata.v2.ODataAnnotations { export type Source = string; }",
    "sap.uxap.BlockBaseColumnLayout": "declare namespace sap.uxap { export type BlockBaseColumnLayout = 'auto' | 1 | 2 | 3; }"
  },
  "globalModules": {
    "sap/ui/Global": {},
    "sap/ui/core/Component": {},
    "sap/ui/base/ManagedObject": {},
    "sap/ui/base/EventProvider": {},
    "sap/ui/base/Object": {},
    "sap/ui/base/Interface": {},
    "sap/ui/base/Event": {},
    "sap/ui/model/Type": {},
    "sap/ui/model/Sorter": {},
    "sap/ui/model/Context": {},
    "sap/ui/model/Model": {},
    "sap/ui/core/message/MessageProcessor": {},
    "sap/ui/model/ListBinding": {},
    "sap/ui/model/Binding": {},
    "sap/ui/model/DataState": {},
    "sap/ui/model/FilterType": {},
    "sap/ui/model/ChangeReason": {},
    "sap/ui/model/ContextBinding": {},
    "sap/ui/model/PropertyBinding": {},
    "sap/ui/model/BindingMode": {},
    "sap/ui/model/TreeBinding": {},
    "sap/ui/model/Filter": {},
    "sap/ui/model/FilterOperator": {},
    "sap/ui/model/MetaModel": {},
    "sap/ui/core/EventBus": {},
    "sap/ui/core/Manifest": {},
    "sap/ui/base/Metadata": {},
    "sap/ui/core/ComponentMetadata": {},
    "sap/ui/core/mvc/Controller": {},
    "sap/ui/core/Element": {},
    "sap/ui/core/CustomData": {},
    "sap/ui/core/LayoutData": {},
    "sap/ui/core/TooltipBase": {},
    "sap/ui/core/Control": {},
    "sap/ui/core/mvc/View": {},
    "sap/ui/core/Fragment": {},
    "sap/ui/core/Core": {},
    "sap/ui/core/RenderManager": {},
    "sap/ui/core/Configuration": {},
    "sap/ui/core/Locale": {},
    "sap/ui/core/library": {},
    "sap/ui/core/UIArea": {},
    "sap/ui/app/Application": {},
    "sap/ui/core/UIComponent": {},
    "sap/ui/core/routing/Router": {},
    "sap/ui/core/routing/Route": {},
    "sap/ui/core/routing/Targets": {},
    "sap/ui/core/routing/Target": {},
    "sap/ui/core/routing/Views": {},
    "sap/ui/core/ComponentContainer": {},
    "sap/ui/core/message/MessageManager": {},
    "sap/ui/core/message/Message": {},
    "sap/ui/model/message/MessageModel": {},
    "sap/ui/model/ClientModel": {},
    "sap/ui/core/mvc/HTMLView": {},
    "sap/ui/core/mvc/JSONView": {},
    "sap/ui/core/mvc/JSView": {},
    "sap/ui/core/tmpl/Template": {},
    "sap/ui/core/tmpl/TemplateControl": {},
    "sap/ui/core/mvc/TemplateView": {},
    "sap/ui/core/mvc/XMLView": {}
  },
  "cleanParamNames": {
    "<code>vData</code>": "vData",
    "&lt;your-page-object-name&gt;": "[key: string]"
  },
  "cacheApis": true,
  "logLevel": "Info",
  "preProcessing": {
    "mockServerWrongStatic": {
      "comment": "Fixes wrong mockserver class, its not abstract. See usage in https://github.com/SAP/openui5-masterdetail-app/blob/master/webapp/localService/mockserver.js",
      "jsonpath": "symbols[?(@.name == 'sap.ui.core.util.MockServer')]",
      "script": "val.abstract = false;"
    },
    "messageboxEnums": {
      "comment": "Forces Pseudinterfaces to be ambient to fix multiple module exports",
      "jsonpath": "symbols[?(@.name == 'sap.m.MessageBox.Action' || @.name == 'sap.m.MessageBox.Icon')]",
      "script": "val.basename = 'MessageBox.' + val.export; val.export = undefined;"
    },
    "pseudoInterfaces": {
      "comment": "Forces Pseudinterfaces to be ambient to fix multiple module exports",
      "jsonpath": "symbols[?(@.name == 'sap.m.NavContainerChild')]",
      "script": "val.forceAmbient = true;"
    },
    "correctStaticSapM": {
      "comment": "Replaces incorrect static values in sap/m",
      "script": "if(val.name) val.static = false;",
      "jsonpath": "$.symbols[?(@.kind == 'class' && @.module.startsWith('sap/m/'))].methods[?(@.static == true && @.name.match(/^(?!extend|getMetadata).*$/))]"
    },
    "correctTitleChangedEventType": {
      "comment": "Corrects the titleChanged event type",
      "script": "val.type = 'sap.ui.base.Event';",
      "jsonpath": "$.symbols[?(@.name == 'sap.ui.core.routing.Router')].events[?(@.name == 'titleChanged')].parameters.0"
    },
    "correctTargetDisplayEventType": {
      "comment": "Corrects the display event type",
      "script": "val.type = 'sap.ui.base.Event';",
      "jsonpath": "$.symbols[?(@.name == 'sap.ui.core.routing.Target')].events[?(@.name == 'display')].parameters.0"
    },
    "correctTargetsDisplayEventType": {
      "comment": "Corrects the display event type",
      "script": "val.type = 'sap.ui.base.Event';",
      "jsonpath": "$.symbols[?(@.name == 'sap.ui.core.routing.Targets')].events[?(@.name == 'display')].parameters.0"
    },
    "correctTargetsTitleChangedEventType": {
      "comment": "Corrects the display event type",
      "script": "val.type = 'sap.ui.base.Event';",
      "jsonpath": "$.symbols[?(@.name == 'sap.ui.core.routing.Targets')].events[?(@.name == 'titleChanged')].parameters.0"
    },
    "correctjquerysaphistory": {
      "comment": "Makes jquery sap history a namespace, not a class",
      "script": "val.kind = 'namespace';",
      "jsonpath": "$.symbols[?(@.name == 'jQuery.sap.history')]"
    },
    "correctcomboboxbasedestroyitems": {
      "comment": "Makes returntype for comboboxbase from combobox to comboboxbase",
      "script": "val.returnValue.type = 'sap.m.ComboBoxBase';",
      "jsonpath": "$.symbols[?(@.name == 'sap.m.ComboBoxBase')].methods[?(@$.name == 'destroyItems')]"
    },
    "correct sap.ui.core.Popup.Dock type": {
      "comment": "Makes correct enum of namespace",
      "script": "val.kind = 'enum'; val.basename = 'Dock'; val.export = 'Dock'",
      "jsonpath": "$.symbols[?(@.name == 'sap.ui.core.Popup.Dock')]"
    }
  },
  "postProcessing": {
    "sap/ui/core/BusyIndicator": [{
      "searchString": ": BusyIndicator",
      "replacement": ": any",
      "isRegex": true,
      "regexFlags": "g"
    }],
    "modules/sap/m/BusyDialog": [{
      "searchString": "public getTooltip(): BusyDialog;",
      "replacement": ""
    }],
    "modules/sap/m/ComboBoxBase": [{
      "searchString": "public destroyItems(): ComboBox;",
      "replacement": "public destroyItems(): this;"
    }],
    "modules/sap/m/NotificationListItem": [{
        "searchString": "public setDatetime(dateTime: {}): this;",
        "replacement": ""
      },
      {
        "searchString": "public setAuthorPicture(authorPicture: string, suppressInvalidation: boolean): this;",
        "replacement": "public setAuthorPicture(authorPicture: string, suppressInvalidation?: boolean): this;"
      },
      {
        "searchString": "public setPriority(priority: string, suppressInvalidation: boolean): this;",
        "replacement": "public setPriority(priority: string, suppressInvalidation?: boolean): this;"
      }
    ],
    "classes/sap/m/selectionDetails": [{
      "searchString": "attachSelectionHandler();",
      "replacement": "attachSelectionHandler(): any;"
    }],
    "classes/sap/ui/model/Model": [{
        "searchString": "class Model extends sap.ui.core.MessageProcessor {",
        "replacement": "class Model<T = any> extends MessageProcessor {"
      },
      {
        "searchString": "public getProperty(sPath: string, oContext: {}): void;",
        "replacement": "public getOriginalProperty<K extends keyof T>(sPath: K, oContext: {}): T[K];"
      },
      {
        "searchString": "public getOriginalProperty(sPath: string, oContext: {}): any;",
        "replacement": "public getOriginalProperty<K extends keyof T>(sPath: K, oContext: {}): T[K];"
      },
      {
        "searchString": "public isBindingModeSupported(sMode: sap.ui.model.BindingMode): void;",
        "replacement": "public isBindingModeSupported(sMode: sap.ui.model.BindingMode): boolean;"
      }
    ],
    "classes/sap/ui/base/Event": [{
        "searchString": "export class Event extends sap.ui.base.Object {",
        "replacement": "class Event<Tsource = any, Tparameters = any> extends sap.ui.base.Object {"
      },
      {
        "searchString": "public getParameter(sName: string): any;",
        "replacement": "public getParameter<K extends keyof Tparameters>(sName: K): Tparameters[K];"
      },
      {
        "searchString": "public getParameters(): any;",
        "replacement": "public getParameters(): Tparameters;"
      },
      {
        "searchString": "public getSource(): EventProvider;",
        "replacement": "public getSource(): Tsource;"
      }
    ],
    "classes/sap/ui/base/Object": [{
      "searchString": "public getInterface(): Interface;",
      "replacement": "public getInterface(): Interface | void | {};"
    }],
    "modules/sap/m/Input": [{
        "searchString": "public getValue(): this;",
        "replacement": "public getValue(): string;"
      },
      {
        "searchString": "public setAggregation(sAggregationName: string, oObject: string, bSuppressInvalidate: string): this;",
        "replacement": "public setAggregation(sAggregationName: string, oObject: {}, bSuppressInvalidate: boolean | undefined): this;"
      }
    ],
    "interfaces/sap/ui/core/library.IProcessableBlobs": [{
      "searchString": "static (?!extend|getMetadata)",
      "replacement": "",
      "isRegex": true,
      "regexFlags": "g"
    }],
    "classes/jquery.sap.events": [{
        "searchString": "declare namespace jquery.sap.events {",
        "replacement": "declare namespace jQuery {"
      },
      {
        "searchString": "export class jQuery.Event {",
        "replacement": "export class Event {"
      }
    ],
    "classes/jquery.sap.global.Version": [{
        "searchString": "declare namespace jquery.sap.global {",
        "replacement": "declare namespace jQuery.sap {"
      },
      {
        "searchString": "export class jQuery.sap.Version {",
        "replacement": "export class Version {"
      }
    ],
    "classes/jquery.sap.global": [{
        "searchString": "declare namespace jquery.sap {",
        "replacement": "declare namespace jQuery.sap.log {"
      },
      {
        "searchString": "export class jQuery.sap.log.Logger {",
        "replacement": "export class Logger {"
      }
    ],
    "classes/sap/ui/core/routing/Target": [{
        "searchString": "protected destroy(): this;",
        "replacement": "public destroy(): this;"
      },
      {
        "searchString": "public constructor(oOptions: {}, oViews: Views, oParent: this);",
        "replacement": "public constructor(oOptions: {}, oViews: Views, oParent: Target);"
      }
    ],
    "modules/sap/ui/commons/DropdownBox": [{
      "searchString": "protected onAfterRendering(oEvent: jQuery.Event): any;",
      "replacement": "protected onAfterRendering(oEvent?: jQuery.Event): any;"
    }],
    "modules/sap/m/MultiComboBox": [{
      "searchString": "import Dialog from \"sap/m/Dialog\";",
      "replacement": "import Dialog from \"sap/m/Dialog\";\nimport ComboBox from \"sap/m/ComboBox\";"
    }],
    "classes/sap/ui/model/CompositeBinding": [{
        "searchString": "import Metadata from \"sap/ui/base/Metadata\";",
        "replacement": "import Metadata from \"sap/ui/base/Metadata\";\nimport Event from \"sap/ui/base/Event\";"
      },
      {
        "searchString": "import Metadata from \"sap/ui/base/Metadata\";",
        "replacement": "import Metadata from \"sap/ui/base/Metadata\";\nimport DataState from 'sap/ui/model/DataState';"
      }
    ],
    "modules/sap/ui/model/analytics/AnalyticalBinding": [{
        "searchString": "hasChildren(oContext: sap.ui.model.Context, mParameters: any)",
        "replacement": "hasChildren(oContext: sap.ui.model.Context, mParameters?: any)"
      },
      {
        "searchString": "import QueryResult from \"sap/ui/model/analytics/odata4analytics\";",
        "replacement": "import {QueryResult} from \"sap/ui/model/analytics/odata4analytics\";"
      }
    ],
    "modules/sap/ui/model/odata/ODataMessageParser": [{
      "searchString": "public parse(oResponse: any, oRequest: any, mGetEntities: any, mChangeEntities: any): any;",
      "replacement": "public parse(oResponse: any, oRequest: any, mGetEntities: any, mChangeEntities: any): any;\npublic parse(): any;\n"
    }],
    "sap/ui/commons/MessageBox": [{
      "searchString": "import Control from \"sap/ui/core/Control\";",
      "replacement": "import Control from \"sap/ui/core/Control\";\nimport { Action } from \"sap/m/MessageBox\";\nimport Icon from \"sap/ui/core/Icon\";"
    }],
    "sap/m/MessageBox": [{
      "searchString": "import { TextDirection } from \"sap/ui/core/library\";",
      "replacement": "import { TextDirection } from \"sap/ui/core/library\";\nimport { Action } from \"sap/m/MessageBox\";\nimport Icon from \"sap/ui/core/Icon\";"
    }],
    "interfaces/sap/ui/core/util/XMLPreprocessor.IContext": [{
      "searchString": "getModel(iPart: number): Model;",
      "replacement": "getModel(iPart: number): any;"
    }],
    "modules/sap/ui/model/odata/v2/ODataTreeBinding": [{
      "searchString": "public getNodeContexts(oContext: sap.ui.model.Context, iStartIndex: number, iLength: number, iThreshold: number): any[];",
      "replacement": "public getNodeContexts(oContext: sap.ui.model.Context, iStartIndex: number, iLength: number, iThreshold?: number): any[];"
    }],
    "classes/sap/ui/base/ManagedObject": [{
      "searchString": "public getModel(sName?: string | any): Model;",
      "replacement": "public getModel<TModel extends Model>(sName?: string): TModel;"
    }],
    "classes/sap/ui/core/mvc/Controller": [
      {
        "searchString": "public byId(sId: string): sap.ui.core.Element;",
        "replacement": "public byId<T extends sap.ui.core.Element = any>(sId: sap.ui.core.ID): T;"
      }
    ],
    "classes/sap/ui/model/analytics/odata4analytics*": [{
      "searchString": "export default class ",
      "replacement": "export class "
    }],
    "classes/sap/m/SelectionDetailsFacade.SelectionDetailsItemFacade": [{
      "searchString": "export default class ",
      "replacement": "export class "
    }],
    "classes/sap/ui/core/Configuration.FormatSettings": [{
      "searchString": "export default class ",
      "replacement": "export class "
    }],
    "modules/sap/ui/core/dnd/DragDropInfo": [{
        "searchString": "[^\\.]dnd\\.(\\w+)",
        "isRegex": true,
        "regexFlags": "g",
        "replacement": " $1"
      },
      {
        "searchString": "import DragSession from \"sap/ui/core/dnd/DragAndDrop/DragSession\";",
        "replacement": ""
      },
      {
        "searchString": "DragSession",
        "isRegex": true,
        "regexFlags": "g",
        "replacement": "any"
      }
    ],
    "modules/sap/ui/core/routing/History": [{
      "searchString": " routing\\.HistoryDirection",
      "isRegex": true,
      "regexFlags": "g",
      "replacement": " HistoryDirection"
    }],
    "namespaces/jquery.sap.global": [
      {
        "searchString": "declare namespace jQuery {",
          "replacement": "declare namespace sapui {\nexport import _ = sap.ui;\n}\n\ndeclare namespace jQuery {"
      }
    ],
    "namespaces/**/jquery.*": [
      {
        "searchString": "sap\\.ui\\.",
        "isRegex": true,
        "regexFlags": "g",
        "replacement": "sapui._."
      }
    ]
  }
}